{
	"head": "Ericwyn's Blog",
	"introduce": "Coding myself",
	"github": "http://github.com/Ericwyn",
	"mail": "Coding myself",
	"domain": "https://blog.meetwhy.com",
	"articles": [
		{
			"title": "浪淘沙 折戟锈千年",
			"tag": "古月言说",
			"create": "2020-08-30 23:09",
			"update": "2020-10-24 23:14",
			"mini": "        折戟锈千年，青史留篇          英雄自古另谁怜          誓语桃园期共死，未有成全                    蜀道可登天，荆益难连          空教忠骨冢长眠          洒尽生前皆血泪，弹指如烟            浪淘沙    填于 二零二零年八月三十日  \u003cbr\u003e\u003cbr\u003e  最近重看央视版三国演义，只到凤雏落坡便 “不忍卒读”，  此后刘备诸葛入川，关羽失荆州，再有三兄弟接连死去  \u003cbr\u003e  \u003cbr\u003e  可叹蜀汉尚未建国，便已盛极",
			"link": "ci-20200830"
		},
		{
			"title": "鹊桥仙 七夕（二）",
			"tag": "古月言说",
			"create": "2020-08-25 23:00",
			"update": "2020-10-24 23:15",
			"mini": "        长空冉冉，星云熠熠，此夜鹊桥飞砌。          烦劳月老几多人，检书册、翻寻次第。                    还曾相劝，太白斟起，不受别离迭继。          却也百载换姻缘，至今日，红绳来系。    二零二零年，七夕夜作  \u003cbr\u003e\u003cbr\u003e\u003cbr\u003e  又是一年七夕，想起两年之前七夕夜，和信轩在网吧中度过  \u003cbr\u003e  那时填了一首鹊桥仙，有                劝君不如，太白甄起，忘却情愁思绪，          料想人间姻缘事，也只是，红绳牵与",
			"link": "ci-20200825"
		},
		{
			"title": "古风 渡口相别",
			"tag": "古月言说",
			"create": "2019-09-15 22:31",
			"update": "2020-10-24 23:00",
			"mini": "        兰舟一叶孤帆直          此去烟涛夜露湿          皎皎我心如碧月          潮声过海语君知    2019年9月15日，九州渡口别后，舟船上作",
			"link": "20190915"
		},
		{
			"title": "卜算子慢 星霜换尽",
			"tag": "古月言说",
			"create": "2019-06-26 18:05",
			"update": "2020-10-24 23:00",
			"mini": "        星霜换尽，鸿雁再临，客路又添肠断          未唱阳关，酒醉数回几案          旧欣欢，只换樽前叹          皎月里，飞花树下，还凭泪眼相看                    驻马长亭慢          有日暮烟波，草临秋岸          此去天涯，尺素寄来几段          盼忆起，桑蚕故里，有当时人面    2019年6月26日，代填",
			"link": "ci-20190626"
		},
		{
			"title": "ubuntu 18.04 顶部状态栏图标消失解决办法",
			"tag": "Ubuntu 使用日常",
			"create": "2019-03-23 11:51",
			"update": "2019-03-23 11:56",
			"mini": " 前言 Ubuntu 18.04 从刚刚发布不久，我一直用到现在，原先由 Ubuntu 16.04 升级而来，一路当中用的还是挺舒畅的。但是有时候也有些小问题，其中一个困扰我很久的就是顶部状态栏有时候，ICON 可能会消失，例如 网易云音乐，微信，Seafile 等的 ICON 都没法显示。   简单解决方法   方法1，重启电脑或者注销在登录   方法2，重启 GNOME ，alt  f2,输入  r ，回车    正经的解决方法   方法1 参照    \u003eIndicator icons do",
			"link": "ubuntu1804-gnome-top-panel-icons-disapear"
		},
		{
			"title": "解压google 官方 ota 包获得 img 文件",
			"tag": "Ubuntu 使用日常,Android",
			"create": "2019-03-22 19:49",
			"update": "2019-03-22 19:49",
			"mini": " 前言 下载了一个 Pixel2 的官方 ota 包, 但是却不知道怎么解压出 system.img 那一堆东西, 搜了一下发现 github 上面已经有了这样的工具了, 但是却是用 python 写的, 用起来有点麻烦, 记录一下  https://github.com/cyxx/extract_android_ota_payload   git clone 下载两个文件     extract_android_ota_payload.py   update_metadata_pb2.py  ",
			"link": "extract_android_ota_payload"
		},
		{
			"title": "从零开始的微信支付接入（一）用户认证",
			"tag": "且听秋谷,微信开发",
			"create": "2019-02-24 12:36",
			"update": "2019-02-24 12:36",
			"mini": " 一，前言 最近接到项目需要，需要接入微信支付。微信支付的麻烦早有耳闻，所以之前也一直不敢接这样的项目，但是没办法为了生计，还是要学习。本篇教程主要讲述如何接入微信支付，分为微信浏览器内h5网页调起支付，以及小程序内调起支付。  其实微信支付出来这么久了，各种教程基本 Google 就都会有，但是自己在写的时候却好像没有特别完整的，再加上微信官网文档不知道为什么总有一种让人觉得很难看懂的感觉（对不起是我太菜了 _(:з」∠)_  所以在对接成功了之后决定写下这么一篇教程，来完整的记录自己的对接过",
			"link": "wxpay-start"
		},
		{
			"title": "相见欢 东风千缕花前",
			"tag": "古月言说",
			"create": "2019-02-19 21:05",
			"update": "2019-02-19 21:05",
			"mini": "        东风千缕花前，似争妍         已是元宵灯影自相连         清晖浅，烛光艳，醉亭轩         如梦人间今夜是团圆                  2016年2月22日         丙申猴年上元之日              丙申猴年上元之夜，应吐槽之外邀约，作诗一首，后又作词 相见欢一首。  今又逢上元佳节，留纪于此 ",
			"link": "20160222-2"
		},
		{
			"title": "古风 上元有感",
			"tag": "古月言说",
			"create": "2019-02-19 21:01",
			"update": "2019-02-19 21:03",
			"mini": "         寒梅落尽小亭轩         独身不忍玉壶前         今夕还望汾江月         寂寥人间总团圆                     2016.02.22  丙申猴年上元之夜，应吐槽之外邀约写就         ",
			"link": "20160222-1"
		},
		{
			"title": "香菇粉丝斋菜",
			"tag": "人间烟火",
			"create": "2019-02-13 18:24",
			"update": "2019-02-13 18:27",
			"mini": " 前言 我们家里都有大年初一第一顿要吃斋菜的习惯，于是几乎每年的大年初一，都会有香菇炒粉丝吃，简单的香菇和粉丝，老爸能将他们炒的特别的香，放少一点盐我觉得这完全能当作主食！   材料选择   大蒜（或者叫大葱？）   蒜头   粉丝   香菇   预先处理    粉丝泡水泡软       如果不泡软的话，等下炒的过程中要不断的加水，高手段位操作，学不来哈哈哈哈哈哈   香菇泡软       可以再处理一下，切掉伞柄   预炒香菇   蒜头切碎，和香菇一起放下去炒       这里可以下盐，避免最",
			"link": "food1902131824"
		},
		{
			"title": "猪肝汤的制作",
			"tag": "人间烟火",
			"create": "2019-02-11 19:40",
			"update": "2019-02-11 19:40",
			"mini": " 前言 这个是我数年之前的一个笔记，那段时间特别喜欢猪肝汤，然后母上大人制作的猪肝汤实在是让我喝得很开心，但是猪肝这东西，一人，一个星期，最高，2两，别吃多了，吃多了胆固醇高...    猪肝的预处理 猪肝，和猪肾一样，有一股猪内脏的气味，那气味对于很多人来说，可能是难以忍受的。所以，处理猪肝的关键，就是去掉猪肝的那股味道。母上大人给出的处理方案是：先进行短时间的腌制。    将猪肝洗净切好，切成薄数毫米的薄块    面粉，酱油，盐，姜切细丝与猪肝一齐腌制，姜丝有去腥的作用（感觉如果要炒猪腰也可",
			"link": "food201902111940"
		},
		{
			"title": "一般青菜的烹饪",
			"tag": "人间烟火",
			"create": "2019-02-11 19:36",
			"update": "2019-02-11 19:36",
			"mini": " 前言 青菜的做法总是相似的，大概就是清水煮好，然后做些酱汁淋上去   青菜的选购   生菜       生菜的话感觉随便买就好了，只要不烂就可以了   白菜       尽量选择那种小一点的白菜（嫩一点？），如果是那种很大颗的白菜的话就尽量不要买了，因为会有丝，口感不好难以吞下   清水煮菜 一般的菜感觉都可以先清水煮，至于什么时候煮熟呢，我感觉大部分菜只要颜色变深，就大概可以关掉火了（不过青菜总是可以生吃的，所以感觉哪怕煮不熟也没什么关系）  专门问了一下母上大人，是否要在煮的时候下盐？得到",
			"link": "food201902111938"
		},
		{
			"title": "Spring Boot使用Redis整合Spring Cache",
			"tag": "SpringBoot,Redis",
			"create": "2019-01-14 13:19",
			"update": "2019-01-14 13:19",
			"mini": " 前言 业务中要求在 Spring Boot 框架上使用缓存来提高数据加载速度，减少对数据库的访问，于是使用 Spring Cache 来作为 Spring Boot 的缓存。   一，加入依赖 由于需要使用 Redis，所以添加 Redis 的依赖是免不了的  pom.xml      \u003c!Spring redis\u003e     \u003cdependency\u003e         \u003cgroupId\u003eorg.springframework.boot\u003c/groupId\u003e         \u003cartifactId\u003e",
			"link": "spring-boot-with-spring-cache"
		},
		{
			"title": "烛影摇红 廿二岁生辰自题",
			"tag": "古月言说",
			"create": "2019-01-01 00:01",
			"update": "2019-01-14 12:57",
			"mini": "    连换星霜，几曾院落桐花现。     人间来去廿一年，谁教功名显？     可笑寒窗已掩，再难得，书读百遍。     夜深忽梦，近水楼台，霞烟尚浅。      烛影摇红.廿二岁生辰自题      时至今日，我梦中常常出现的数样东西之一，其一便是高中课室和语文课堂。  廿二已至，功名未显。毕业将近，寒窗将掩。凭此半阙烛影摇红，自斟自饮，自唱自和。",
			"link": "birth2018"
		},
		{
			"title": "Sprinp Boot配置文件外置",
			"tag": "SpringBoot",
			"create": "2018-12-28 14:32",
			"update": "2018-12-28 14:32",
			"mini": " 前言 之前 Spring Boot 开发的时候，打包部署会联通 properties 文件一同打包，虽然这样的好处是生成了一个 jar，直接一把梭 `nohup java jar `就启动了，但是也有很麻烦的地方，例如需要修改配置文件的时候，就要重新打包。于是学习了 Spring Boot 将配置文件外置的方法   Spring Boot 配置文件加载优先级 按照规定，Spring Boot 的配置文件加载优先级如下：    当前目录下的config子目录   当前目录   classpath",
			"link": "spring-boot-external-config"
		},
		{
			"title": "和脉脉斗智斗勇的一个晚上",
			"tag": "且听秋谷",
			"create": "2018-12-12 21:53",
			"update": "2018-12-12 21:54",
			"mini": " 前言  脉脉作为一个职场交流的软件，在上面还是可以很快看到很多消息的（职言板块感觉有点类似于职场人的微博？，这个功能还是很赞的  但是脉脉出了名的恶心是对通讯录的盗取以及胡乱使用，为了不让自己的七大姑八大姨也收到什么“xxx把你标记为职场小能手的短信”，又能注册脉脉，于是折腾了大半个晚上   分析 首先，脉脉是会读取和上传通讯录的（读取和上传通讯录是不一样的），根据朋友的使用体验，发现应该是第一次注册的时候要求上传通讯录，此后不要求上传通讯录（但是可以手动更新通讯录），而至于读取通讯录的话就不",
			"link": "fuck-maimai"
		},
		{
			"title": "Ponza博客评论系统-文档",
			"tag": "且听秋谷,Golang",
			"create": "2018-12-07 22:23",
			"update": "2018-12-07 22:23",
			"mini": " Ponza 静态博客评论框架，灵感来自 Gitment   使用   增加 key      .ponza k \"blog.meetwhy.com\"     // 显示如下     key: b9df8d72b06f4f8399c71ab520600130 for host: blog.meetwhy.com      为项目新建一个 key，该 key 只允许使用在来自域名 `blog.meetwhy.com` 的访问    启动      .ponza  启动项目在 localhost:2",
			"link": "ponza-document"
		},
		{
			"title": "Ubuntu 终端乱码解决方法",
			"tag": "Ubuntu 使用日常",
			"create": "2018-12-03 10:04",
			"update": "2018-12-03 10:04",
			"mini": " 前言 前几天忘了配置了什么，然后忽然间 ubuntu 的终端就中文乱码了，找了网上各种 ubuntu 中文教程，安装各种中文 package，结果都没用，心都碎了  如下图      修改一下 `~/.zshrc` 就可以了，增加下面两行代码          export LC_ALL=en_US.UTF8       export LANG=en_US.UTF8    然后就可以中文了！！！！    后知后觉的解决方法2 用了两天之后发现 zsh 总是报权限问题...而且用起来也没有原生终",
			"link": "ubuntu-bash-ch"
		},
		{
			"title": "AOSP植入第三方应用趟坑记录",
			"tag": "AOSP,AndroidFramework",
			"create": "2018-11-20 23:58",
			"update": "2018-11-20 23:58",
			"mini": " 前言 之前成功的编译了 AOSP ，使用时候确实发现老旧的 Nexus5X 待机时间大大的提高了，然而 AOSP 实在是太过简陋了，还要自己下载各种常用的 APP，于是考虑能不能，直接植入一些自己常用 APP，免去刷机后重新下载的麻烦，于是找到 stackoverflow 上面的问题  \u003e  里面提供了三种方法    修改 device\\mstar\\common\\app\\Android.mk   修改 device\\mstar\\mstarcedric3\\full_mstarcedric3.mk",
			"link": "add-apks-in-aosp-build"
		},
		{
			"title": "Nexus5X-AOSP编译问题记录",
			"tag": "AOSP,AndroidFramework",
			"create": "2018-11-04 11:20",
			"update": "2018-11-20 23:57",
			"mini": " 前言 入坑 Android Framework ，所以先尝试着自己编译一个 ROM，因为手上有的设备是 Nexus 5X ，没有开发板，所以就先拿着可怜的小5X 来测试吧  照着    无比羡慕那些一个小时就能跑完的 dalao  编译过程中一般会有很多 warning，无视就好了   刷入 Image   先设定输出目录，就是你的 IMG 编译好的地方          export ANDROID_PRODUCT_OUT=/your/path/to/img   找到编译输出的  fastb",
			"link": "make-nexus5x-aosp"
		},
		{
			"title": "Java-JNI简单教程",
			"tag": "且听秋谷,java,AndroidFramework",
			"create": "2018-11-03 21:15",
			"update": "2018-11-20 23:57",
			"mini": " 前言 最近决定入坑 Android Framework 了，这样的话，JNI 就一定是需要了解和会使用的，毕竟 Android Framework 就是各种 JNI 调用 c 和 c 的驱动然后提供给上层的 Android APP   JNI JNI 就是 Java Native Interface 的缩写，Java 通过 JNI 来调用 C 的程序和库，这些动态库在 windows 上面以 `.dll` 的形式存在，在 Unix 世界里以 `.so` 的形式存在，Android 基于 Lin",
			"link": "java-jni-quick-start"
		},
		{
			"title": "文赋 天海阁文集序",
			"tag": "古月言说",
			"create": "2018-11-02 11:39",
			"update": "2018-11-20 23:57",
			"mini": " 乙未年秋，余初到大学城，年冬一日，百无聊赖，独寻僻静之处。撞撞跌跌，竟入了此中，发觉了这一妙处所在。   初入此中，只觉震撼，昔闻诗言，危楼高百尺，手可摘星辰。此处楼高，虽未到百尺，却也觉己可与星辰比肩。    独立栏前，可穷千里之目，能观浩浩河山。而身后一座，只如王者之位，坐于其中，有君临天下之感。于此座上读书，无一页不是沧海之卷，无一字不是山河之言。   此后，余常于闲暇之际，独上此中，每每见有书卷数本置于坐旁，却始终不遇其主人身影。于是留书一封于座左，望有人因缘际会，可答复一二，与我作个",
			"link": "tianhaige"
		},
		{
			"title": "古风 夜渡寒江别友",
			"tag": "古月言说",
			"create": "2018-10-19 22:12",
			"update": "2018-11-20 23:57",
			"mini": "        夜渡寒江风有绪         长河一去怎戚戚         又待波烟帆寄起         伴君千里月迷离                              2018年10月14日晚，与桃源小书童分别后写就  送君自然可以送至千里  待得真的相隔万水，雪满天山的时候  思绪又能够怎样飞去呢",
			"link": "xin20181014"
		},
		{
			"title": "Spring-Boot魔改为 Spring-Cloud项目实践",
			"tag": "SpringBoot,SpringCloud",
			"create": "2018-10-08 23:01",
			"update": "2018-11-20 23:57",
			"mini": " 前言 最近接触到了 Spring Cloud ，虽然还没有正式的在生产环境当中使用，但是那种尽量将一个大的整体才分成小的模块的这种想法，让我不明觉历。恰好最近实训当中写的项目是基于 Spring Boot 的，于是打算魔改成一个简单的 Spring Cloud 项目。也天生 Spring Boot 就和 Spring Cloud 无痛融合。   关于微服务 简单的理解和学习了Spring Cloud 和所谓微服务的概念之后，有了以下一些对微服务的个人理解   1，微服务以服务为核心 从前我们可",
			"link": "spring-boot-to-spring-cloud"
		},
		{
			"title": "Spring Boot全局统一异常处理",
			"tag": "SpringBoot",
			"create": "2018-10-04 18:37",
			"update": "2018-11-20 23:57",
			"mini": " 前言 之前用 Spring Boot 写 RESTful API 的时候，对于各种错误的捕捉都是直接用 try catch 的，所以在各个方法里面都总是有一些相同的 try catch 代码块，虽然也是能用但是总有点别扭不自在。这两天学习了一下 Spring Boot 当中对于异常的统一处理，发现很简单但是却能让代码优雅不少。   定义自定义异常 不多累述  ``` public class JsonParseException extends Exception {      private",
			"link": "springBootGolbalExpHandle"
		},
		{
			"title": "Spring Boot当中使用自定义注解",
			"tag": "SpringBoot",
			"create": "2018-09-30 12:46",
			"update": "2018-11-20 23:57",
			"mini": " 前言 自定义注解算是 Java 这门语言当中我非常喜欢的特性了，因为它能够实实在在的提高开发效率，简化代码而不失可读性。之前仅仅在写入门级 ORM 框架的时候使用过，这两天开发新的项目，看到dalao们在Spring Boot 当中使用自定义注解来完成各种事务，立马就学习了一下   环境   Spring Boot 2.0.5.RELEASE   目标 我们希望使用对于方法的注解，来为该方法加入请求鉴权，增加 RESTful API 的安全性   注解定义 使用 `public @interf",
			"link": "spring-boot-custom-annotation"
		},
		{
			"title": "使用 Jenkins 自动构建项目",
			"tag": "Server,且听秋谷,jenkins",
			"create": "2018-09-07 16:43",
			"update": "2018-11-20 23:57",
			"mini": " 前言 公司项目开发到后期需要放到服务器上面去运行测试，但是不想每次都在本地编译成 jar 之后传到服务器再运行，于是使用 Jenkins 来完成这些步骤   安装 jenkins           需要先安装 java     apt install softwarepropertiescommon     addaptrepository ppa:webupd8team/java     aptget update     aptget install oraclejava8install",
			"link": "jenkinsSetting"
		},
		{
			"title": "鹊桥仙 七夕",
			"tag": "古月言说",
			"create": "2018-08-17 22:30",
			"update": "2018-11-20 23:57",
			"mini": "\u003cbr\u003e          彩云鹊影，双星同聚，照世间痴儿女         相逢一度誓山河 ，谁能料，别离意趣                  劝君不如，太白甄起，忘却情愁思绪         料想人间姻缘事，也只是，红绳牵与  \u003cbr\u003e  丁酉年七月初七晚 孑然填就",
			"link": "201877"
		},
		{
			"title": "iMCPortal-连接过程解析及Golang实现",
			"tag": "且听秋谷,Golang,爬虫",
			"create": "2018-07-18 16:45",
			"update": "2018-11-20 23:57",
			"mini": " 0 前言  最近学校之前开通了 iMC Portal 无线网络, 只是每次都要开启浏览器才可以登录, 并且需要一直开着一个标签, 这是件很麻烦的事情, 而且最近 (20180711) 发现会出现每隔 15 分钟就断线一次的问题, 所以希望通过抓包来了解连接的过程,之后使用 java 或者其他语言实现模拟登录, 并且在断线之后自动重连   1 协议解析  1.1 获取 cookie 访问学校 iMC portal 页面之后会发现有以下的一些页面请求       d         开启 DEBU",
			"link": "iMCPortal"
		},
		{
			"title": "Norcia文档",
			"tag": "且听秋谷,Norcia",
			"create": "2018-05-22 20:25",
			"update": "2018-11-20 23:57",
			"mini": " Norcia 一个简单的静态博客框架   项目结构   根目录下的 HTML \\ CSS \\ JavaScript 文件   `document` 文件夹用来存放博文 markdown 文件   config.json 作为静态博客的配置文件以及博客文章索引,该文件在初次设定好个人信息后可由 Norcia 程序自动更新与维护, 详情请看下文介绍    config.json 自动更新  更新 运行 Norcia 程序就可以自动依照 document 文件夹里面的 markdown 文件的修改,",
			"link": "norcia-document"
		},
		{
			"title": "markdown测试文档",
			"tag": "且听秋谷,Norcia",
			"create": "2018-05-21 19:02",
			"update": "2018-11-20 23:57",
			"mini": " 前言 这是一份Markdown 测试文档，用来测试 Norcia 对 markdown 文件的加载和显示   主要内容 \u003e  Markdown是什么？ \u003e  谁创造了它？ \u003e  为什么要使用它？ \u003e  怎么使用？ \u003e  谁在用？ \u003e  尝试一下   正文  1. Markdown是什么？ Markdown是一种轻量级标记语言，它以纯文本形式(*易读、易写、易更改*)编写文档，并最终以HTML格式发布。     Markdown也可以理解为将以MARKDOWN语法编写的语言转换成HTML内容的工",
			"link": "markdown-test"
		},
		{
			"title": "毕业惜别自题四首",
			"tag": "古月言说",
			"create": "2018-04-23 19:52",
			"update": "2018-11-20 23:57",
			"mini": " 序 16年中时候某天中午看到他们搬校区，又看到公众号上写满离愁别恨，那时候还年轻所以也不知道什么，只是就着假想的离别心情写了几行字，这就是第一首诗的由来。眨眼间却忽然发现已经到了自己的师兄毕业和离开的时候了。   其（一）           淅水荷花今又红                   年华易逝总匆匆                   只欲为君折赠远                   相逢仍记旧音容   其（二）           骊歌今日对苍穹                 ",
			"link": "graduate-1804"
		},
		{
			"title": "Markmobi开发记录",
			"tag": "且听秋谷",
			"create": "2018-04-05 16:34",
			"update": "2018-11-20 23:57",
			"mini": " 前言 自己使用 Kindle 已经有好几年的历史了，从高中时期看各种古文，后来一口气的看一大堆小说，再到后来看看一些技术书籍，而最近发现 Kindle 的另外一个用处就是看 Github 上面的一些电子书籍。  Github 上面是有很多的技术书籍的，因为 Github 有着开放和包容的特性，所以很多的人会翻译各种技术专业的文档或者相关的书，并变成一个 repo ，后续不断更新和提交。从这看来，Github 其实像是一个大的书库。另外哪怕不是书籍，Github 上面也有很多可能并不太适合在电脑",
			"link": "Markmobi"
		},
		{
			"title": "腾讯云CVM安装Win10",
			"tag": "且听秋谷",
			"create": "2018-03-14 22:12",
			"update": "2018-11-20 23:57",
			"mini": "前言 遇到一个奇怪的需求,某个软件只能在win10上面运行,而在win server 环境下会迷幻出错,本身租用了一台腾讯云CVM 想着拿来做运算,结果gg了,无奈之下只能尝试安装系统为 Win10.这里吐槽一下,为毛各个云服务器厂商就是不提供win10系统呢(难道是因为要付费么   准备工作   你的CVM 必须是安装了 windows server 某个版本的(推荐2016版本,毕竟与win10 同一世代   在腾讯云上下载了 win10 的安装镜像iso   备份了驱动     这里额外说",
			"link": "install-win10-in-tencent-cvm"
		},
		{
			"title": "使用Jitpack发布Github项目",
			"tag": "且听秋谷",
			"create": "2018-02-10 17:24",
			"update": "2018-11-20 23:57",
			"mini": " 前言 使用 Jitpack 能够很方便的把自己一些 java 的库打包成 jar 发布，并且可以在新项目当中使用 maven 引入，实在是很方便，以下是我一些关于 使用 Jitpack 发布 Github 项目的实践   IDE   intellij IDEA   gradle      gradle install  然后会看到生成的`.gradle`文件夹   gradle.build  在项目根目录下新建一个 `gradle.build`文件，基础配置如下      //配置 java ",
			"link": "jitpack-use"
		},
		{
			"title": "金缕曲 廿一岁生辰留记",
			"tag": "古月言说",
			"create": "2018-01-01 00:00",
			"update": "2018-11-20 23:57",
			"mini": "         今廿年驰隙         换星霜，几人知道，几多如意         洒泪凌波痴梦碎，究竟红笺谁寄         常辗转，辛艰不已         始道人生需患难，怨从前年少轻磨砺         留旧愿，仍相系                  恍惚冬尽春来矣         未觉察，栏前病树，绿芽新立         知晓沉舟留侧畔，自在当逾千里         勤艺业，才为长计         如是修身终不枉，对孤觞几度空零涕         路漫漫，自不易 ",
			"link": "birth21"
		},
		{
			"title": "R package 打包记录",
			"tag": "R语言,且听秋谷",
			"create": "2017-10-13 18:15",
			"update": "2018-11-20 23:57",
			"mini": " 设定工作文件目录 打包R package 要求两个目录 分别是    工作目录 （存放 R 代码）          mkdir /home/ericwyn/work            包目录 （存放包）          mkdir /home/ericwyn/Rlibs    默认情况下在mydir是找不到mylib下的包的，因为mylib不在包的搜索路径里，解决这个问题只需要在mydir新建一个文 件`.Rprofile`文件，里面写上：`.libPaths(“/home/wentr",
			"link": "auto-package-of-r"
		},
		{
			"title": "Ubuntu Server 14.04 安装状态监控Linux Dash",
			"tag": "Server,且听秋谷",
			"create": "2017-06-16 19:49",
			"update": "2018-11-20 23:57",
			"mini": " 介绍 Linux Dash是一款非常简单的服务器监控程序，可以通过python、php以及LAMP部署运行，此次安装的环境是Ubuntu Server 14.04 LTS,使用Linux Dash的版本是github上面一个同学的2.0汉化版， Github地址是   \u003elinuxdash 的汉化版 \u003ehttps://github.com/NoBey/linuxdashzh    安装Git和Python     省略   通过Git安装Linux Dash     git clone htt",
			"link": "install-linux-dash"
		},
		{
			"title": "OpenCpu使用笔记",
			"tag": "且听秋谷,R语言",
			"create": "2017-06-08 10:09",
			"update": "2018-11-20 23:57",
			"mini": " 前言 Opencpu 能够将 R package 变成 Web API，以此供其他语言的程序调用   安装       Requires Ubuntu 16.04 (Xenial)     sudo addaptrepository y ppa:opencpu/opencpu2.0     sudo aptget update      sudo aptget upgrade      Installs OpenCPU server     sudo aptget install y open",
			"link": "opencpu-learn-note"
		},
		{
			"title": "金缕曲 弱冠生辰留记",
			"tag": "古月言说",
			"create": "2017-01-01 19:20",
			"update": "2018-11-20 23:57",
			"mini": "        虚度韶华否。到如今，二十秋尽，几寻回首。         儿语高明桑梓处，不记当时年幼。对残灯，重慈影瘦。         此后求学游禅桂，幸两三师友同携手。         洒笔墨，纸笺旧。                   人生数度别离久。与寒窗，羊城春媚，又来消受。         四五光景新添上，路远羁途随后。仅如愿，初心相守。         且看尘涛风月送，纵逍遥些许能够。         亦不枉，湿衣袖。  丙申猴年 生辰夜，写就于家中卧室床头书桌之上  重慈影瘦",
			"link": "birth2017"
		},
		{
			"title": "御街行 记得当日长亭外",
			"tag": "古月言说",
			"create": "2016-08-10 19:09",
			"update": "2018-11-20 23:57",
			"mini": "        记得当日长亭外，怒马春衫在。         而今重聚过飞尘，依旧从前气概。         金樽未满，羽觞凌月，欢语仍一再                   相逢不料别离快，遗恨填沧海。         鲤鱼鸿雁劝知足，勿把思愁轻载。         江湖相忘，千山隔阻，不愿初心改。   2016.08.10 此日深夜，凌晨时分，困倦之中填就",
			"link": "GoodbyeMug"
		},
		{
			"title": "青玉案 醒来夜半香飘散",
			"tag": "古月言说",
			"create": "2016-05-20 00:00",
			"update": "2018-11-20 23:57",
			"mini": "    醒来夜半香飘散，     断肠处，终虚幻。     梦里几回卮酒满。     料知今日，只余空叹，君我薄缘断。           无灯白月窗前漫。     落地如霜、惹心颤。     月下谁曾姣面婉。     花残风冷，竹灰星暗，枕畔空名唤。  ",
			"link": "middleOfTheNight"
		},
		{
			"title": "古风 十九岁生辰自题",
			"tag": "古月言说",
			"create": "2016-01-01 00:00",
			"update": "2018-11-20 23:57",
			"mini": "        二九年华慢挥毫         闲观风月送尘涛         寻梦不知身是客         竹庐檐下雨潇潇 ",
			"link": "birth2016"
		},
		{
			"title": "古风 逢中秋独坐寄乡",
			"tag": "古月言说",
			"create": "2015-09-27 19:27",
			"update": "2018-11-20 23:57",
			"mini": "        玉盘如故碧苍穹         千古悲欢聚散空         客路不识杯酒趣         吾乡今夜月朦胧   2015年9月27日 中秋之夜  应吐槽之外邀约，零丁而作 ",
			"link": "midAutumn2015"
		},
		{
			"title": "古风 月夜和潮归",
			"tag": "古月言说",
			"create": "2015-03-03 19:17",
			"update": "2018-11-20 23:57",
			"mini": "        游子乘潮家未回         十年风雨两相随         又见月明潮万里         箫声如故喝潮归  人都该有故乡的温柔",
			"link": "backHome"
		},
		{
			"title": "对联 题壁一联",
			"tag": "古月言说",
			"create": "2015-03-03 19:13",
			"update": "2018-11-20 23:57",
			"mini": "        斑鬓白须几载疏窗伴误身儒冠         彩英紫苑一朝寒枕随憔赋招魂",
			"link": "couplet201607"
		}
	],
	"friends": [
		{
			"name": "五寸畦田",
			"href": "https://xiphoray.github.io/"
		},
		{
			"name": "你的益达",
			"href": "https://zilchfp.github.io/"
		},
		{
			"name": "MuyuMoe",
			"href": "https://muyu.moe"
		},
		{
			"name": "千魂剑",
			"href": "https://blog.asucreyau.xyz/"
		}
	]
}